name: Build Android APK

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Create proper Briefcase project structure
      run: |
        mkdir -p src/financetracker
        cp main.py src/financetracker/app.py
        echo '__version__ = "0.0.1"' > src/financetracker/__init__.py
        
        cat > src/financetracker/__main__.py << 'EOF'
        from financetracker.app import main

        if __name__ == '__main__':
            main()
        EOF

    - name: Create pyproject.toml with license
      run: |
        cat > pyproject.toml << 'EOF'
        [build-system]
        requires = ["briefcase"]
        
        [tool.briefcase]
        project_name = "Finance Tracker"
        bundle = "org.example"
        version = "0.0.1"
        url = "https://github.com/example/finance-tracker"
        license = "MIT"
        author = "Finance App Developer"
        author_email = "developer@example.com"

        [tool.briefcase.app.financetracker]
        formal_name = "Finance Tracker"
        description = "Personal Finance Tracking Application"
        sources = ["src/financetracker"]
        requires = []
        
        [tool.briefcase.app.financetracker.android]
        requires = []
        build_gradle_dependencies = [
            "androidx.appcompat:appcompat:1.6.1",
            "androidx.constraintlayout:constraintlayout:2.1.4",
            "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0",
        ]
        EOF

    - name: Install Briefcase
      run: |
        python -m pip install --upgrade pip
        pip install briefcase

    - name: Build Android APK
      run: |
        briefcase create android
        briefcase build android
        briefcase package android

    - name: Find and copy APK files
      run: |
        echo "🔍 Searching for all APK files..."
        find . -name "*.apk" -type f -exec echo "Found: {}" \;
        
        # Create dist directory
        mkdir -p dist
        
        # Copy all APK files to dist
        find . -name "*.apk" -type f -exec cp {} dist/ \;
        
        # Also copy AAB files if they exist
        find . -name "*.aab" -type f -exec cp {} dist/ \;
        
        echo "📱 Files in dist directory:"
        ls -la dist/
        
        # Rename files for easier identification
        cd dist
        for file in *.apk; do
            if [ -f "$file" ]; then
                mv "$file" "FinanceTracker-${file}"
            fi
        done
        
        for file in *.aab; do
            if [ -f "$file" ]; then
                mv "$file" "FinanceTracker-${file}"
            fi
        done
        
        echo "📱 Renamed files:"
        ls -la

    - name: Upload APK and AAB files
      uses: actions/upload-artifact@v4
      with:
        name: finance-tracker-app
        path: dist/*
        retention-days: 30

    - name: Build summary
      run: |
        echo "## 🎉 Build Successful!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Your Finance Tracker APK has been built successfully!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📱 Download Instructions:" >> $GITHUB_STEP_SUMMARY
        echo "1. Go to the **Actions** tab" >> $GITHUB_STEP_SUMMARY
        echo "2. Click on this build" >> $GITHUB_STEP_SUMMARY
        echo "3. Scroll down to **Artifacts**" >> $GITHUB_STEP_SUMMARY
        echo "4. Click **finance-tracker-app** to download" >> $GITHUB_STEP_SUMMARY
        echo "5. Unzip and install the APK on your Android phone" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔧 Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "1. Install APK on your Android phone" >> $GITHUB_STEP_SUMMARY
        echo "2. Run backend server on your laptop" >> $GITHUB_STEP_SUMMARY
        echo "3. Connect app to your laptop's IP address" >> $GITHUB_STEP_SUMMARY
        echo "4. Start tracking your expenses!" >> $GITHUB_STEP_SUMMARY
